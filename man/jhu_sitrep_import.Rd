% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sitrep_jhu.R
\name{jhu_sitrep_import}
\alias{jhu_sitrep_import}
\alias{jhu_sitrep_cleandb}
\alias{jhu_sitrep_filter}
\alias{jhu_sitrep_cumulative}
\alias{jhu_sitrep_all_sources}
\alias{jhu_sitrep_all_sources_tidy}
\alias{jhu_sitrep_country_report}
\alias{jhu_sitrep_cleandb_country_only}
\title{jhu sitrep data management and visualization}
\usage{
jhu_sitrep_import(source)

jhu_sitrep_cleandb(data)

jhu_sitrep_filter(data, country_region = "all")

jhu_sitrep_cumulative(data)

jhu_sitrep_all_sources(country_region = "all")

jhu_sitrep_all_sources_tidy(data, data_filter = data_filter)

jhu_sitrep_country_report(country_region = "Peru")

jhu_sitrep_cleandb_country_only(data)
}
\arguments{
\item{source}{string of source to use: "confirmed","deaths" or "recovered"}

\item{data}{input of raw jhu dataset}

\item{country_region}{input country name in english}

\item{data_filter}{default from jhu_sitrep_all_sources output}

\item{country_region}{input country name in english}
}
\value{
import and cleaned jhu dataset
}
\description{
clean and plot jhu sitrep
}
\section{Functions}{
\itemize{
\item \code{jhu_sitrep_import}: import data from github

\item \code{jhu_sitrep_cleandb}: clean jhu dataset

\item \code{jhu_sitrep_filter}: clean jhu dataset

\item \code{jhu_sitrep_cumulative}: clean jhu dataset

\item \code{jhu_sitrep_all_sources}: clean jhu dataset

\item \code{jhu_sitrep_all_sources_tidy}: clean jhu dataset

\item \code{jhu_sitrep_country_report}: clean jhu dataset

\item \code{jhu_sitrep_cleandb_country_only}: import only numbers for the country
}}

\examples{

\dontrun{

library(covid19viz)
library(tidyverse)

jhu_sitrep <- jhu_sitrep_import(source = "confirmed")

jhu_sitrep \%>\%
  jhu_sitrep_cleandb() \%>\%
  filter(country_region=="Peru") \%>\%
  arrange(desc(dates))

jhu_sitrep \%>\%
  jhu_sitrep_cleandb_country_only() \%>\%
  filter(country_region=="Australia") \%>\%
  avallecam::print_inf()

jhu_sitrep_import(source = "confirmed") \%>\%
  jhu_sitrep_cleandb() \%>\%
  jhu_sitrep_filter(country_region="all") \%>\%
  jhu_sitrep_cumulative()

jhu_sitrep_all_sources(country_region="Peru")

}

}
